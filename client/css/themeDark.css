html{
	background:#fff;
}
/*
note: messes up layer ordering in firefox and old chromes
html.darkTheme{
	filter:invert(1.0);
}
instead: do top level elements not parents to fixed positioned;
*/
html.darkTheme #nodeConfigInfo, 
html.darkTheme .options, 
html.darkTheme .dashboard, 
html.darkTheme #serviceBackground,
html.darkTheme .mainPanel,
html.darkTheme #walletInitModal,
html.darkTheme .modalWrap{
	filter:invert(1);
}
/*body{
	transition: filter 0.2s linear;
	margin:0;
}*/
/*html.darkTheme body{
	filter:invert(1.0);
}*/

/*logos*/
/*.darkTheme .logo img{
	transition: filter 0.2s linear;
}*/
.darkTheme .logo img{
	filter:invert(1.0);
}
/*.contractsBeeswarm circle.node{
	transition: filter 0.2s linear;
}
.darkTheme .contractsBeeswarm circle.node{
	filter:invert(1.0);
}*/

/*beeswarm*/
/*circle.node{
	transition: fill 0.2s linear;
}*/
.darkTheme circle.node{
	fill: rgba(220,36,138,0.6);
}
.darkTheme circle.node.grey{
	fill: rgba(161,161,161,0.4);
}
.darkTheme circle.node.highlighted{
	fill: rgba(220,36,138,1.0);
}

/*#siaMain .options li{
	transition: border-left 0.2s linear;
}*/
.darkTheme #siaMain .options li:hover{
	border-left: 5px solid #DC248A;
	border-left-color:#DC248A;
}
.darkTheme .donutChart:not(.aktDonut):not(.dvpnDonut) g.pie path.on {
    fill:rgba(220,36,138,1.0) !important;
}
.darkTheme .aktPanel .donutChart.aktDonut g.pie path.on{
	fill: #50E2DD !important;
}
.darkTheme .donutChart.dvpnDonut g.pie path.on{
	fill: #1d9eec !important;
	filter:invert(1);

}
.darkTheme .donutChart g.pie path:not(.on) {
    fill:rgba(161,161,161,0.4) !important;
}
.darkTheme .donutChart .label .swatch{
	filter:invert(1);
}
.darkTheme .qrImg{
	filter:invert(1);
}
.darkTheme .txElem a{
	filter:invert(1);
}
.darkTheme .sendMax{
	filter:invert(1);
}
.darkTheme #siaHostInfo li input, 
.darkTheme #siaHostInfo li select, 
.darkTheme #pathShortcut, 
.darkTheme #encryptionPW, 
.darkTheme #confirmPW, 
.darkTheme #mnemonic, 
.darkTheme #mnemonicOut, 
.darkTheme .balanceBox, 
.darkTheme #walletName, 
.darkTheme .modalInput, 
.darkTheme #nodeConfigInfo input, 
.darkTheme #unlockPW, 
.darkTheme .allKeys select, 
.darkTheme .addDiskSelect select, 
.darkTheme .styledSelect, 
.darkTheme .styledInput, 
.darkTheme .registerProviderModal input[type="checkbox"], 
.darkTheme .setPortsModal input[type="checkbox"]{
	filter:invert(1);
}
.darkTheme .button{
	filter:invert(1);
}
.darkTheme .hostTitle img{
	filter:invert(1);
}

.darkTheme #walletInitModal, 
.darkTheme #sendModal, 
.darkTheme #qrModal, 
.darkTheme .pathSelectModal, 
.darkTheme #hostInfoModal, 
.darkTheme .modalWrap{
	background:rgba(255,255,255,0.8);
}
.darkTheme #walletInitModal #closeModal, .modalWrap #closeModal, .modalWrap .closeModal{
	color:#111;
}
.darkTheme .messageIcon{
	filter:invert(1);
}
.darkTheme .range .bar{
	filter:invert(1);
}
.darkTheme .value.hasUpDownColor{
	filter:invert(1);
}

/*DVPN*/
.darkTheme .logs{
	filter:invert(1);
}
.darkTheme .statusBubble .bubble{
	filter:invert(1);
}
.darkTheme .warningEmoji{
	filter:invert(1);
}
.darkTheme .showAllKeys,
.darkTheme .getMyIP,
.darkTheme .myIPValue,
.darkTheme #showAdvancedSettings
{
	filter:invert(1);
	color:#1c9fea;
}
.darkTheme .pwErrorMessage{
	filter:invert(1);
}
.darkTheme .noConfirmBadge, 
.darkTheme .confirmBadge{
	filter:invert(1);
}
.darkTheme .syncedStatus .emoji, 
.darkTheme .sentInfo .error{
	filter:invert(1);
}
.darkTheme .balanceValue.hasColor{
	filter:invert(1);
}
.darkTheme .aktPanel .topLevel li a, 
.darkTheme .aktPanel .topLevel td a, 
.darkTheme a.aktStatusPageLink, 
.darkTheme a.placeBid{
	filter:invert(1);
}
.darkTheme .emoji{
	filter:invert(1);
}

.darkTheme .buildABoxModal a, 
.darkTheme #nodeConfigInfo .buildLink, 
.darkTheme .advancedOptions a, 
.darkTheme a.getGlobalIP, 
.darkTheme a.getWallet{
	filter:invert(1);
}
.darkTheme .buildABoxModal .step{
	filter:invert(1);
}

.darkTheme .buildABoxModal .chooseDevice, 
.darkTheme .buildABoxModal .finishHost{
	filter:invert(1);
}
.darkTheme .providerList .errorMessage{
	filter:invert(1);
}
.darkTheme #clusterStatus .qrWrap{
	filter:invert(1);
}
.darkTheme #clusterStatus .indicator{
	filter:invert(1);
}

.darkTheme .ordersPanel .prevNextTri{
	filter:invert(1);
}
.darkTheme .lds-roller{
	filter:invert(1);
}
.darkTheme .ordersPanel tr.highlighted{
	filter:invert(1);
}
.darkTheme .ordersPanel .mainOption.selected, 
.darkTheme .ordersPanel .subOption.selected{
	filter:invert(1);
}
.darkTheme a.akashLink{
	filter:invert(1);
}

.darkTheme #streamgraph path.stream{
	filter:invert(1);
}
.darkTheme .createNewData .error{
	filter:invert(1);
}
.darkTheme .validation.error{
	filter:invert(1);
}

.darkTheme #siaMain .syncedStatus{
	filter: invert(1);
}
.darkTheme input#autostart{
	filter:invert(1);
}
.darkTheme .isActiveBadge .badgeWrap{
	filter:invert(1);
}
